// <auto-generated />
using System;
using Cinema.Model.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cinema.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Cinema.Model.Film", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Genreid")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("Years")
                        .HasColumnType("datetime2");

                    b.Property<int?>("hallid")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("sessionid")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Genreid");

                    b.HasIndex("hallid");

                    b.HasIndex("sessionid");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("Cinema.Model.Genre", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Cinema.Model.hall", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Hall")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("halls");
                });

            modelBuilder.Entity("Cinema.Model.session", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("filmid")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("hallid")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("price")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("filmid");

                    b.HasIndex("hallid");

                    b.ToTable("sessions");
                });

            modelBuilder.Entity("Cinema.Model.Ticket", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("filmid")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("hallid")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("number_place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("number_rows")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("filmid");

                    b.HasIndex("hallid");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Cinema.Model.Film", b =>
                {
                    b.HasOne("Cinema.Model.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("Genreid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cinema.Model.hall", "hall")
                        .WithMany()
                        .HasForeignKey("hallid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cinema.Model.session", "session")
                        .WithMany()
                        .HasForeignKey("sessionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("hall");

                    b.Navigation("session");
                });

            modelBuilder.Entity("Cinema.Model.session", b =>
                {
                    b.HasOne("Cinema.Model.Film", "film")
                        .WithMany()
                        .HasForeignKey("filmid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cinema.Model.hall", "hall")
                        .WithMany()
                        .HasForeignKey("hallid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("film");

                    b.Navigation("hall");
                });

            modelBuilder.Entity("Cinema.Model.Ticket", b =>
                {
                    b.HasOne("Cinema.Model.Film", "film")
                        .WithMany()
                        .HasForeignKey("filmid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cinema.Model.hall", "hall")
                        .WithMany()
                        .HasForeignKey("hallid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("film");

                    b.Navigation("hall");
                });
#pragma warning restore 612, 618
        }
    }
}
